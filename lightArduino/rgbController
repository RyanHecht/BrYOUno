#define RED 6
#define BLUE 5
#define GREEN 9

int R = 0;
int G = 0;
int B = 0;

int fadeDuration = 1000;

void setup() {
   pinMode(GREEN, OUTPUT);
   pinMode(RED, OUTPUT);
   pinMode(BLUE, OUTPUT);
   Serial.begin(9600);
   //TurnOn();
   //delay(5000);
   //TurnOff();
   fadeIn();
   
}

void halogen() {
  set(255, 241, 224);
}

void blueSky() {
  set(64, 156, 255);
}

void tungsten() {
  set(255, 197, 143);
}

void carbonArc() {
  set(255, 250, 244);
}

void fadeIn() {
  fadeTo(255, 255, 255);
}

void fadeOut() {
  fadeTo(0, 0, 0);
}

void set(int r, int g, int b) {
  R = r;
  G = g;
  B = b;
  analogWrite(RED, r);
  analogWrite(BLUE, b);
  analogWrite(GREEN, g);
}

int getStep(int cur, int to) {
  int step = to - cur;
  if (step != 0) {
    step = fadeDuration / step;
  }
  return step;
}

int getValueAtTick(int step, int val, int tick) {
  if ((step != 0) && (tick % step == 0)) {
    if (step > 0) {
      val = val + 1;
    } else if (step < 0) {
      val = val - 1;
    }
  }
  if (val > 255) {
    val = 255;
  } else if (val < 0) {
    val = 0;
  }
  return val;
}

void fadeTo(int r, int g, int b) {
  int rStep = getStep(R, r);
  int gStep = getStep(G, g);
  int bStep = getStep(B, b);

  for (int i = 0; i < fadeDuration; i++) {
    int red = getValueAtTick(rStep, R, i);
    int green = getValueAtTick(gStep, G, i);
    int blue = getValueAtTick(bStep, B, i);

    set(red, green, blue);
    delay(1);
  }
}


void loop() {
  //fadeIn();
  //fadeOut();
  if (Serial.available() > 0) {
    String str = Serial.readString();
    Serial.println(str);
    if (str == "on") {
      fadeIn();
    }
    else if (str == "off") {
      fadeOut();
    }
    else {
      long hex = strtol(str.c_str(), NULL, 16);
      Serial.println(hex);
      fadeTo(hex >> 16 & 0xFF, 
          hex >> 8 & 0xFF, 
          hex & 0xFF);
    }
  }
    
    
}
